# This workflow will build a docker container, publish it to Google Container Registry, and deploy it to GKE.
#
# To configure this workflow:
#
# 1. Ensure that your repository contains the necessary configuration for your Google Kubernetes Engine cluster, including deployment.yml, kustomization.yml, service.yml, etc.
#
# 2. Set up secrets in your workspace: GKE_PROJECT with the name of the project, GKE_EMAIL with the service account email, GKE_KEY with the service account key.
#
# 3. Change the values for the GKE_ZONE, GKE_CLUSTER and IMAGE environment variables (below).

name: Build and Deploy to GKE

on:
  push:
    branches:
    - master

# Environment variables available to all jobs and steps in this workflow
env:
  GKE_PROJECT: ${{ secrets.GKE_PROJECT }}
  GKE_ZONE: asia-southeast1-b
  GKE_CLUSTER: cluster
  DOCKER_PASS: ${{ secrets.DOCKER_PASS }}
  IMAGE: dugiahuy/hotel
  GITHUB_SHA: ${{ github.sha }}

jobs:
  # build:
  #   name: Build Docker container
  #   runs-on: ubuntu-latest
  #   steps:

  #   - uses: actions/checkout@v1
  #   - name: Build the Docker image
  #     run: docker build . --file Dockerfile --tag $IMAGE:latest
      
  #   - name: Login to Docker Hub
  #     run: printf $DOCKER_PASS | base64 -d  | docker login -u dugiahuy --password-stdin

  #   - name: Push image to Docker Hub
  #     run: | 
  #       docker tag $IMAGE $IMAGE
  #       docker push $IMAGE
        
  deploy:
    # needs: build
    name: Deploy to GKE
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@master

    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '270.0.0'
        service_account_key: ${{ secrets.GKE_KEY }}

    # - name: Set up Kustomize
    #   run: |
    #     curl -o kustomize --location https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
    #     chmod u+x ./kustomize
    #     sudo mv ./kustomize /usr/local/bin/kustomize

    - name: Deploy
      run: |
        gcloud container clusters get-credentials $GKE_CLUSTER --zone $GKE_ZONE --project $GKE_PROJECT
        cd k8s
        sed -i 's/{{UPDATED_TS}}/'$(date | sed 's/ /-/g' | sed 's/:/-/g')'/g' deployment.yaml
        sed -i 's/{{TAG}}/'latest'/g' deployment.yaml
        kubectl apply -f .
        kubectl rollout status deployment/hotel-data -n hotel
        kubectl get services -o wide -n hotel
